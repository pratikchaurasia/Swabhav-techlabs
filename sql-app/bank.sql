CREATE TABLE BANK_MASTER(
NAME VARCHAR(20) PRIMARY KEY,
PASSWORD VARCHAR(20),
BALANCE INT );


CREATE TABLE `BANK_TRANSACTION`(
`NAME` VARCHAR(32) NOT NULL,
`AMOUNT` DOUBLE, 
`TYPE` CHAR(1), 
`DATE` datetime , 
CONSTRAINT FK_BM FOREIGN KEY (`NAME`) REFERENCES `BANK_MASTER`(`NAME`));

drop table `BANK_TRANSACTION`


DELIMITER //
DROP TRIGGER IF EXISTS CHECK_UPDATE_BALANCE //
CREATE TRIGGER CHECK_UPDATE_BALANCE BEFORE UPDATE ON BANK_MASTER
FOR EACH ROW
BEGIN
    DECLARE MSG VARCHAR(128);
    IF NEW.BALANCE < 1000 THEN
        SET MSG = CONCAT('BALANCE ERROR: LOW BALANCE CANNOT UPDATE YOUR BALANCE ', '');
        SIGNAL SQLSTATE '76000' SET MESSAGE_TEXT = MSG;
    END IF;
END
//

DELIMITER ;

DELIMITER //
DROP TRIGGER IF EXISTS CHECK_INSERT_BALANCE //
CREATE TRIGGER CHECK_INSERT_BALANCE BEFORE INSERT ON BANK_MASTER
FOR EACH ROW
BEGIN
    DECLARE MSG VARCHAR(128);
    IF NEW.BALANCE < 1000 THEN
        SET MSG = CONCAT('BALANCE ERROR: LOW BALANCE CANNOT UPDATE YOUR BALANCE ', '');
        SIGNAL SQLSTATE '76000' SET MESSAGE_TEXT = MSG;
    END IF;
END
//

DELIMITER ;


DELIMITER //
DROP TRIGGER IF EXISTS CHECK_TYPE //
CREATE TRIGGER CHECK_TYPE BEFORE INSERT ON BANK_TRANSACTION
FOR EACH ROW
BEGIN
    DECLARE MSG VARCHAR(128);
    IF NEW.TYPE NOT IN('W','D') THEN
        SET MSG = CONCAT('TYPE ERROR: PLEAESE ENTER D OR W', '');
        SIGNAL SQLSTATE '75000' SET MESSAGE_TEXT = MSG;
    END IF;
END
//

DELIMITER ;

DELIMITER //
DROP TRIGGER IF EXISTS SYNC //
CREATE TRIGGER SYNC AFTER INSERT ON BANK_TRANSACTION
FOR EACH ROW
BEGIN
    IF NEW.TYPE LIKE 'D' THEN
			UPDATE BANK_MASTER
			SET BALANCE = (BALANCE + NEW.AMOUNT)
			WHERE NAME=NEW.NAME;
	 END IF;
	 IF NEW.TYPE LIKE 'W' THEN
			UPDATE BANK_MASTER
			SET BALANCE = (BALANCE - NEW.AMOUNT)
			WHERE NAME=NEW.NAME;
	 END IF;
END
//

DELIMITER ;
bank_master
bank_masterINSERT INTO BANK_TRANSACTION VALUES('Beulah',2000,'D',NOW());

bank_master